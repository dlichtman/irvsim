# -*- coding: utf-8 -*-

# Run this app with `python app.py` and
# visit http://127.0.0.1:8050/ in your web browser.

import dash
import dash_core_components as dcc
import dash_html_components as html

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = JupyterDash(__name__, external_stylesheets=external_stylesheets)

app.layout = html.Div([
    html.H1("Instant Runoff Simulator"),
    
    #Number of candidates, input flows to make list of name entries
    html.Label('Enter in number of candidates'),
    dcc.Input(id='numcan', value='', type='number'),
    
    #make list of candidate names to be entered number of candidates long
    #Also enter in first choice percent 
    html.Label('Percent'),
    #dcc.Input(value='', type='number'),
    html.Label('Candidates'),
    #for i in numcan:
    dcc.Input(id='my-input', value='Enter name of candidate', type='text'),
    #dcc.Input(id='my-input', value='Enter name of candidate 2', type='text'),
    html.Br(),
    html.Div(id='my-output'),
    #labelStyle={'display': 'inline-block'},
    
    #make grid of selectable first choice percents 
    '''html.Label('Dropdown'),
    dcc.Dropdown(
        options=[
            {'label': 'New York City', 'value': 'NYC'},
            {'label': u'Montr√©al', 'value': 'MTL'},
            {'label': 'San Francisco', 'value': 'SF'}
        ],
        value=''
    ),'''

    ], style={'columnCount': 1})


@app.callback(
    Output(component_id='my-output', component_property='children'),
    Input(component_id='my-input', component_property='value')
)
def update_output_div(input_value):
    return 'Output: {}'.format(input_value)

# Run app and display result inline in the notebook
app.run_server(mode='jupyterlab')
